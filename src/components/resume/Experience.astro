---
interface Responsibilities {
  general: string[];
  math: string[];
  assessment: string[];
  web: string[];
}

interface Role {
  title: string;
  department: string;
  date_range: string;
  responsibilities: Responsibilities[];
}

interface Company {
  company: string;
  location: string;
  type: string;
  roles: Role[];
}

interface ExperienceData {
  experience: Company[];
}

import data from '../../data/resume.json';
const { experience }: ExperienceData = data;
---

<section class="experience">
  <fieldset class="persona-selector">
    <legend>select professional persona:</legend>
    <div class="persona">
      <input id="math" type="checkbox" name="persona" value="math" />
      <label for="math">mathematics educator</label><br />
      <input
        id="assessment"
        type="checkbox"
        name="persona"
        value="assessment"
      />
      <label for="assessment">assessment specialist</label><br />
      <input id="web" type="checkbox" name="persona" value="web" />
      <label for="web">web developer</label>
    </div>
  </fieldset>
  <h2>Experience</h2>
  <div class="experience-list">
    {
      experience.map((company) => (
        <div class="experience-entry">
          <div class="company">
            <h3>{company.company}</h3>
            <div class="company-details">
              <p>{company.location}</p>
              <p>{company.type}</p>
            </div>
          </div>
          <div class="roles">
            {company.roles.map((role) => (
              <div class="role">
                <div class="role-header">
                  <h4>{role.title}</h4>
                  <div class="role-details">
                    <p>{role.department}</p>
                    <p>{role.date_range}</p>
                  </div>
                </div>
                <ul class="responsibilities">
                  {role.responsibilities.map((responsibility) =>
                    responsibility.math.map((item) => (
                      <li class="math">{item}</li>
                    ))
                  )}
                  {role.responsibilities.map((responsibility) =>
                    responsibility.assessment.map((item) => (
                      <li class="assessment">{item}</li>
                    ))
                  )}
                  {role.responsibilities.map((responsibility) =>
                    responsibility.web.map((item) => (
                      <li class="web">{item}</li>
                    ))
                  )}
                  {role.responsibilities.map((responsibility) =>
                    responsibility.general.map((item) => (
                      <li class="general">{item}</li>
                    ))
                  )}
                </ul>
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</section>

<style>
  .persona-selector {
    border-radius: 0 1rem 1rem;
  }
  .experience-entry {
    padding: 0.5em;
  }
  :is(.company, .role-header) {
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
    gap: 0 1em;
    padding-block: 0.5em;
  }
  :is(.company-details, .role-details) {
    display: flex;
    flex-wrap: wrap;
    gap: 0 1em;
    font-style: italic;
    font-size: smaller;

    p {
      padding: 0;
    }
  }
  .role {
    padding-block: 0.5em;
  }
  .responsibilities li:is(.math, .assessment, .web) {
    display: none;
  }
  :has(.persona [value='math']:checked) {
    .responsibilities li:is(.math) {
      display: list-item;
    }
  }
  :has(.persona [value='assessment']:checked) {
    .responsibilities li:is(.assessment) {
      display: list-item;
    }
  }
  :has(.persona [value='web']:checked) {
    .responsibilities li:is(.web) {
      display: list-item;
    }
  }
</style>
